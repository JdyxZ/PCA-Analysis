Hospi_z <- Hospi_coords$coord[, 3]
# Plot PCA Analysis data
plot3d(PCA_x, PCA_y, PCA_z, col = "purple",
type = "s", size = 0.5, xlab = "PC1", ylab = "PC2", zlab = "PC3", main="3D Scatter Plot")
# Plot Prediction Model data
plot3d(Pompeu_x, Pompeu_y, Pompeu_z, col = "yellow",
type = "s", size = 0.5, add=TRUE)
plot3d(Montigala_x, Montigala_y, Montigala_z, col = "red",
type = "s", size = 0.5, add=TRUE)
plot3d(Nil_x, Nil_y, Nil_z, col = "orange",
type = "s", size = 0.5, add=TRUE)
plot3d(Pitagoras_x, Pitagoras_y, Pitagoras_z, col = "green",
type = "s", size = 0.5, add=TRUE)
plot3d(Junta_x, Junta_y, Junta_z, col = "blue",
type = "s", size = 0.5, add=TRUE)
plot3d(Erasme_x, Erasme_y, Erasme_z, col = "black",
type = "s", size = 0.5, add=TRUE)
plot3d(Manso_x, Manso_y, Manso_z, col = "pink",
type = "s", size = 0.5, add=TRUE)
plot3d(Hospi_x, Hospi_y, Hospi_z, col = "brown",
type = "s", size = 0.5, add=TRUE)
# Plot PCA Analysis data
plot3d(PCA_x, PCA_y, PCA_z, col = "purple",
type = "s", size = 0.5, xlab = "PC1", ylab = "PC2", zlab = "PC3", main="3D Scatter Plot")
# Plot Prediction Model data
plot3d(Pompeu_x, Pompeu_y, Pompeu_z, col = "yellow",
type = "s", size = 0.5, add=TRUE)
plot3d(Montigala_x, Montigala_y, Montigala_z, col = "red",
type = "s", size = 0.5, add=TRUE)
# Plot PCA Analysis data
plot3d(PCA_x, PCA_y, PCA_z, col = "purple",
type = "s", size = 0.5, xlab = "PC1", ylab = "PC2", zlab = "PC3", main="3D Scatter Plot")
# Plot Prediction Model data
plot3d(Pompeu_x, Pompeu_y, Pompeu_z, col = "yellow",
type = "s", size = 0.5, add=TRUE)
plot3d(Montigala_x, Montigala_y, Montigala_z, col = "red",
type = "s", size = 0.5, add=TRUE)
plot3d(Nil_x, Nil_y, Nil_z, col = "orange",
type = "s", size = 0.5, add=TRUE)
plot3d(Pitagoras_x, Pitagoras_y, Pitagoras_z, col = "green",
type = "s", size = 0.5, add=TRUE)
plot3d(Junta_x, Junta_y, Junta_z, col = "blue",
type = "s", size = 0.5, add=TRUE)
plot3d(Erasme_x, Erasme_y, Erasme_z, col = "black",
type = "s", size = 0.5, add=TRUE)
# Plot the condicende region
shade3d(ellipsoid, col = "blue", alpha = 0.5)
View(Erasme)
View(Parellada)
View(Nil)
View(Pitagoras)
# Plot PCA Analysis data
plot3d(PCA_x, PCA_y, PCA_z, col = "purple",
type = "s", size = 0.5, xlab = "PC1", ylab = "PC2", zlab = "PC3", main="3D Scatter Plot")
# Plot Prediction Model data
plot3d(Pompeu_x, Pompeu_y, Pompeu_z, col = "yellow",
type = "s", size = 0.5, add=TRUE)
plot3d(Montigala_x, Montigala_y, Montigala_z, col = "red",
type = "s", size = 0.5, add=TRUE)
# Plot PCA Analysis data
plot3d(PCA_x, PCA_y, PCA_z, col = "purple",
type = "s", size = 0.5, xlab = "PC1", ylab = "PC2", zlab = "PC3", main="3D Scatter Plot")
plot3d(Montigala_x, Montigala_y, Montigala_z, col = "red",
type = "s", size = 0.5, add=TRUE)
plot3d(Junta_x, Junta_y, Junta_z, col = "blue",
type = "s", size = 0.5, add=TRUE)
# Plot the PCA model
scatter3d(PCA_x, PCA_y, PCA_z, point.col = "steelblue",
sphere.size = 1.5, xlab = "PC1", ylab = "PC2", zlab = "PC3", surface = FALSE, ellipsoid = TRUE)
#Install libraries
install.packages("usethis")
install.packages("factoextra")
install.packages("FactoMineR")
install.packages("readxl")
install.packages("rgl")
install.packages("mgcv")
install.packages("nlme")
install.packages("car", dependencies = TRUE)
install.packages("scatterplot3d")
# Load libraries into memory
library(factoextra)
library(FactoMineR)
library(stats)
library(carData)
library(car)
library(rgl)
library(readxl)
library(nlme)
library(mgcv)
library(corrplot)
library(scatterplot3d)
# Plot the PCA model
scatter3d(PCA_x, PCA_y, PCA_z, point.col = "steelblue",
sphere.size = 1.5, xlab = "PC1", ylab = "PC2", zlab = "PC3", surface = FALSE, ellipsoid = TRUE)
# Load the datasets of the others homes
Pompeu<- read_excel(path = "CASA_PADRE_MARC_PCA.xlsx")
datos_Pompeu<- Pompeu[,2:17]
# Plot PCA Analysis data
plot3d(PCA_x, PCA_y, PCA_z, col = "purple",
type = "s", size = 0.5, xlab = "PC1", ylab = "PC2", zlab = "PC3", main="3D Scatter Plot")
# Plot Prediction Model data
plot3d(Pompeu_x, Pompeu_y, Pompeu_z, col = "yellow",
type = "s", size = 0.5, add=TRUE)
plot3d(Nil_x, Nil_y, Nil_z, col = "orange",
type = "s", size = 0.5, add=TRUE)
plot3d(Pitagoras_x, Pitagoras_y, Pitagoras_z, col = "green",
type = "s", size = 0.5, add=TRUE)
plot3d(Montigala_x, Montigala_y, Montigala_z, col = "red",
type = "s", size = 0.5, add=TRUE)
plot3d(Nil_x, Nil_y, Nil_z, col = "orange",
type = "s", size = 0.5, add=TRUE)
plot3d(Junta_x, Junta_y, Junta_z, col = "blue",
type = "s", size = 0.5, add=TRUE)
plot3d(Junta_x, Junta_y, Junta_z, col = "blue",
type = "s", size = 0.5, add=TRUE)
plot3d(Erasme_x, Erasme_y, Erasme_z, col = "black",
type = "s", size = 0.5, add=TRUE)
plot3d(Manso_x, Manso_y, Manso_z, col = "pink",
type = "s", size = 0.5, add=TRUE)
plot3d(Hospi_x, Hospi_y, Hospi_z, col = "brown",
type = "s", size = 0.5, add=TRUE)
# Plot PCA Analysis data
plot3d(PCA_x, PCA_y, PCA_z, col = "purple",
type = "s", size = 0.5, xlab = "PC1", ylab = "PC2", zlab = "PC3", main="3D Scatter Plot")
# Plot Prediction Model data
plot3d(Pompeu_x, Pompeu_y, Pompeu_z, col = "yellow",
type = "s", size = 0.5, add=TRUE)
plot3d(Junta_x, Junta_y, Junta_z, col = "blue",
type = "s", size = 0.5, add=TRUE)
plot3d(Erasme_x, Erasme_y, Erasme_z, col = "black",
type = "s", size = 0.5, add=TRUE)
plot3d(Manso_x, Manso_y, Manso_z, col = "pink",
type = "s", size = 0.5, add=TRUE)
# Plot the condicende region
shade3d(ellipsoid, col = "blue", alpha = 0.5)
plot3d(Hospi_x, Hospi_y, Hospi_z, col = "brown",
type = "s", size = 0.5, add=TRUE)
plot3d(Pitagoras_x, Pitagoras_y, Pitagoras_z, col = "green",
type = "s", size = 0.5, add=TRUE)
plot3d(Nil_x, Nil_y, Nil_z, col = "orange",
type = "s", size = 0.5, add=TRUE)
View(rotated_Montigala)
View(rotated_Montigala)
View(rotated_Manso)
View(rotated_Manso)
View(scaled_Montigala)
View(scaled_Montigala)
# Dades i gràfics interessants sobre la variancia i desviació estàndard de les diferents variables
summary(pca3d)
eig.val <- get_eigenvalue(pca3d)
fviz_eig(pca3d, addlabels = TRUE, ylim = c(0, 20))
#Install libraries
install.packages("usethis")
install.packages("factoextra")
install.packages("FactoMineR")
install.packages("readxl")
install.packages("rgl")
install.packages("mgcv")
install.packages("nlme")
install.packages("car", dependencies = TRUE)
install.packages("scatterplot3d")
# Load libraries into memory
library(factoextra)
library(FactoMineR)
library(stats)
library(carData)
library(car)
library(rgl)
library(readxl)
library(nlme)
library(mgcv)
library(corrplot)
library(scatterplot3d)
# Plot PCA Analysis data
plot3d(PCA_x, PCA_y, PCA_z, col = "purple",
type = "s", size = 0.5, xlab = "PC1", ylab = "PC2", zlab = "PC3", main="3D Scatter Plot")
# Plot Prediction Model data
plot3d(Pompeu_x, Pompeu_y, Pompeu_z, col = "yellow",
type = "s", size = 0.5, add=TRUE)
plot3d(Pitagoras_x, Pitagoras_y, Pitagoras_z, col = "green",
type = "s", size = 0.5, add=TRUE)
# Plot PCA Analysis data
plot3d(PCA_x, PCA_y, PCA_z, col = "purple",
type = "s", size = 0.5, xlab = "PC1", ylab = "PC2", zlab = "PC3", main="3D Scatter Plot")
# Plot Prediction Model data
plot3d(Pompeu_x, Pompeu_y, Pompeu_z, col = "yellow",
type = "s", size = 0.5, add=TRUE)
plot3d(Junta_x, Junta_y, Junta_z, col = "blue",
type = "s", size = 0.5, add=TRUE)
plot3d(Erasme_x, Erasme_y, Erasme_z, col = "black",
type = "s", size = 0.5, add=TRUE)
plot3d(Manso_x, Manso_y, Manso_z, col = "pink",
type = "s", size = 0.5, add=TRUE)
# Plot the condicende region
shade3d(ellipsoid, col = "blue", alpha = 0.5)
# Generació del model PCA en 2D i plotejat de gràfics representatius
pca2d <- PCA(datos_nci,ncp=5,graph=FALSE)
fviz_pca_var(pca2d, col.var = "contrib") # Scree plot
fviz_pca_biplot(pca2d, col.var = "contrib") # Biplot
# Dades i gràfics interessants sobre la variancia i desviació estàndard de les diferents variables
summary(pca3d)
eig.val <- get_eigenvalue(pca3d)
fviz_eig(pca3d, addlabels = TRUE, ylim = c(0, 20))
var <- get_pca_var(pca3d)
corrplot(var$contrib, is.corr=FALSE)
# Contributions of variables to PC1
fviz_contrib(pca3d, choice = "var", axes = 1, top = 10)
cor_matrix <- cor(datos_nci)
plot3d(cor_matrix, type = "s", size = 2)
# Create the PCA model
PCA_3Dmodel <- prcomp(scaled_data, center=TRUE, scale.=TRUE)$x
# Set coordinates of the PCA Analysis into auxiliary variables
PCA_x <- PCA_3Dmodel$ind$coord[,1]
PCA_y <- PCA_3Dmodel$ind$coord[,2]
PCA_z <- PCA_3Dmodel$ind$coord[,3]
# Get some useful data from the PCA model
PCA_center <- colMeans(PCA_3Dmodel$ind$coord)
pca3d <- PCA(scaled_data,ncp=3,graph=FALSE)
# Get some useful data from the PCA model
PCA_center <- colMeans(pca3d$ind$coord)
PCA_cov <- cov(pca3d$ind$coord)
# Create an ellipsoid object to represent the conficende region
ellipsoid <- ellipse3d(PCA_cov, centre = PCA_center,level = 0.95)
# Set coordinates of the PCA Analysis into auxiliary variables
PCA_x <- pca3d$ind$coord[,1]
PCA_y <- pca3d$ind$coord[,2]
PCA_z <- pca3d$ind$coord[,3]
# Plot the PCA model
scatter3d(PCA_x, PCA_y, PCA_z, point.col = "steelblue",
sphere.size = 1.5, xlab = "PC1", ylab = "PC2", zlab = "PC3", surface = FALSE, ellipsoid = TRUE)
pca3d <- PCA(scaled_data,ncp=3,graph=TRUE)
pca3d <- PCA(scaled_data,ncp=3,scale.unit=TRUE,graph=TRUE)
# Plot the PCA model
scatter3d(PCA_x, PCA_y, PCA_z, point.col = "steelblue",
sphere.size = 1.5, xlab = "PC1", ylab = "PC2", zlab = "PC3", surface = FALSE, ellipsoid = TRUE)
# Set coordinates of the PCA Analysis into auxiliary variables
PCA_x <- pca3d$ind$coord[,1]
PCA_y <- pca3d$ind$coord[,2]
PCA_z <- pca3d$ind$coord[,3]
# Plot PCA Analysis data
plot3d(PCA_x, PCA_y, PCA_z, col = "purple",
type = "s", size = 0.5, xlab = "PC1", ylab = "PC2", zlab = "PC3", main="3D Scatter Plot")
# Plot Prediction Model data
plot3d(Pompeu_x, Pompeu_y, Pompeu_z, col = "yellow",
type = "s", size = 0.5, add=TRUE)
plot3d(Junta_x, Junta_y, Junta_z, col = "blue",
type = "s", size = 0.5, add=TRUE)
plot3d(Erasme_x, Erasme_y, Erasme_z, col = "black",
type = "s", size = 0.5, add=TRUE)
plot3d(Manso_x, Manso_y, Manso_z, col = "pink",
type = "s", size = 0.5, add=TRUE)
# Plot the condicende region
shade3d(ellipsoid, col = "blue", alpha = 0.5)
# Create the PCA model
rotated_data <- prcomp(scaled_data, center=TRUE, scale=TRUE)
# Set coordinates of the PCA Analysis into auxiliary variables
PCA_x <- rotated_data$ind$coord[,1]
PCA_y <- rotated_data$ind$coord[,2]
PCA_z <- rotated_data$ind$coord[,3]
# Plot the PCA model
scatter3d(PCA_x, PCA_y, PCA_z, point.col = "steelblue",
sphere.size = 1.5, xlab = "PC1", ylab = "PC2", zlab = "PC3", surface = FALSE, ellipsoid = TRUE)
# Set coordinates of the PCA Analysis into auxiliary variables
PCA_x <- rotated_data$ind$coord[1]
# Plot PCA Analysis data
plot3d(PCA_x, PCA_y, PCA_z, col = "purple",
type = "s", size = 0.5, xlab = "PC1", ylab = "PC2", zlab = "PC3", main="3D Scatter Plot")
# Set coordinates of the PCA Analysis into auxiliary variables
PCA_x <- pca3d$ind$coord[,1]
PCA_y <- pca3d$ind$coord[,2]
PCA_z <- pca3d$ind$coord[,3]
# Plot PCA Analysis data
plot3d(PCA_x, PCA_y, PCA_z, col = "purple",
type = "s", size = 0.5, xlab = "PC1", ylab = "PC2", zlab = "PC3", main="3D Scatter Plot")
# Plot Prediction Model data
plot3d(Pompeu_x, Pompeu_y, Pompeu_z, col = "yellow",
type = "s", size = 0.5, add=TRUE)
plot3d(Junta_x, Junta_y, Junta_z, col = "blue",
type = "s", size = 0.5, add=TRUE)
plot3d(Erasme_x, Erasme_y, Erasme_z, col = "black",
type = "s", size = 0.5, add=TRUE)
plot3d(Manso_x, Manso_y, Manso_z, col = "pink",
type = "s", size = 0.5, add=TRUE)
# Plot the condicende region
shade3d(ellipsoid, col = "blue", alpha = 0.5)
# Plot the condicende region
shade3d(ellipsoid, col = "blue", alpha = 0.75)
# Plot the condicende region
shade3d(ellipsoid, col = "blue", alpha = 0.5)
Pompeu_coords <- predict(pca3d, scaled_Pompeu)
Montigala_coords <- predict(pca3d, scaled_Montigala)
# Set coordinates of the prediction into auxiliar variables
Pompeu_x <- Pompeu_coords$coord[, 1]
Pompeu_y <- Pompeu_coords$coord[, 2]
Pompeu_z <- Pompeu_coords$coord[, 3]
Montigala_x <- Montigala_coords$coord[, 1]
Montigala_y <- Montigala_coords$coord[, 2]
Montigala_z <- Montigala_coords$coord[, 3]
# Plot PCA Analysis data
plot3d(PCA_x, PCA_y, PCA_z, col = "purple",
type = "s", size = 0.5, xlab = "PC1", ylab = "PC2", zlab = "PC3", main="3D Scatter Plot")
# Plot Prediction Model data
plot3d(Pompeu_x, Pompeu_y, Pompeu_z, col = "yellow",
type = "s", size = 0.5, add=TRUE)
plot3d(Junta_x, Junta_y, Junta_z, col = "blue",
type = "s", size = 0.5, add=TRUE)
# Plot PCA Analysis data
plot3d(PCA_x, PCA_y, PCA_z, col = "purple",
type = "s", size = 0.5, xlab = "PC1", ylab = "PC2", zlab = "PC3", main="3D Scatter Plot")
# Plot Prediction Model data
plot3d(Pompeu_x, Pompeu_y, Pompeu_z, col = "yellow",
type = "s", size = 0.5, add=TRUE)
Pompeu_coords <- predict(pca3d, rotated_Pompeu)
# Make a prediction based on the PCA model
rotated_Pompeu <- prcomp(scaled_Pompeu, center=TRUE, scale.=TRUE)$x
Pompeu_coords <- predict(pca3d, rotated_Pompeu)
# Make a prediction based on the PCA model
rotated_Pompeu <- prcomp(scaled_Pompeu, center=TRUE, scale.=TRUE)$x
Pompeu_coords <- predict(pca3d, rotated_Pompeu)
Pompeu_coords <- predict(pca3d, scaled_Pompeu)
Montigala_coords <- predict(pca3d, scaled_Montigala)
Nil_coords <- predict(pca3d, scaled_Nil)
Pitagoras_coords <- predict(pca3d, scaled_Pitagoras)
Junta_coords <- predict(pca3d, scaled_Junta)
Erasme_coords <- predict(pca3d, scaled_Erasme)
Manso_coords <- predict(pca3d, scaled_Manso)
Hospi_coords <- predict(pca3d, scaled_Hospi)
# Set coordinates of the prediction into auxiliar variables
Pompeu_x <- Pompeu_coords$coord[, 1]
Pompeu_y <- Pompeu_coords$coord[, 2]
Pompeu_z <- Pompeu_coords$coord[, 3]
Montigala_x <- Montigala_coords$coord[, 1]
Montigala_y <- Montigala_coords$coord[, 2]
Montigala_z <- Montigala_coords$coord[, 3]
Nil_x <- Nil_coords$coord[, 1]
Nil_y <- Nil_coords$coord[, 2]
Nil_z <- Nil_coords$coord[, 3]
Pitagoras_x <- Pitagoras_coords$coord[, 1]
Pitagoras_y <- Pitagoras_coords$coord[, 2]
Pitagoras_z <- Pitagoras_coords$coord[, 3]
Junta_x <- Junta_coords$coord[, 1]
Junta_y <- Junta_coords$coord[, 2]
Junta_z <- Junta_coords$coord[, 3]
Erasme_x <- Erasme_coords$coord[, 1]
Erasme_y <- Erasme_coords$coord[, 2]
Erasme_z <- Erasme_coords$coord[, 3]
Manso_x <- Manso_coords$coord[, 1]
Manso_y <- Manso_coords$coord[, 2]
Manso_z <- Manso_coords$coord[, 3]
Hospi_x <- Hospi_coords$coord[, 1]
Hospi_y <- Hospi_coords$coord[, 2]
Hospi_z <- Hospi_coords$coord[, 3]
# Plot PCA Analysis data
plot3d(PCA_x, PCA_y, PCA_z, col = "purple",
type = "s", size = 0.5, xlab = "PC1", ylab = "PC2", zlab = "PC3", main="3D Scatter Plot")
# Plot Prediction Model data
plot3d(Pompeu_x, Pompeu_y, Pompeu_z, col = "yellow",
type = "s", size = 0.5, add=TRUE)
plot3d(Junta_x, Junta_y, Junta_z, col = "blue",
type = "s", size = 0.5, add=TRUE)
plot3d(Erasme_x, Erasme_y, Erasme_z, col = "black",
type = "s", size = 0.5, add=TRUE)
plot3d(Manso_x, Manso_y, Manso_z, col = "pink",
type = "s", size = 0.5, add=TRUE)
plot3d(Montigala_x, Montigala_y, Montigala_z, col = "red",
type = "s", size = 0.5, add=TRUE)
plot3d(Nil_x, Nil_y, Nil_z, col = "orange",
type = "s", size = 0.5, add=TRUE)
plot3d(Pitagoras_x, Pitagoras_y, Pitagoras_z, col = "green",
type = "s", size = 0.5, add=TRUE)
plot3d(Hospi_x, Hospi_y, Hospi_z, col = "brown",
type = "s", size = 0.5, add=TRUE)
# Plot the condicende region
shade3d(ellipsoid, col = "blue", alpha = 0.5)
# Dades i gràfics interessants sobre la variancia i desviació estàndard de les diferents variables
summary(pca3d)
eig.val <- get_eigenvalue(pca3d)
fviz_eig(pca3d, addlabels = TRUE, ylim = c(0, 20))
fviz_eig(pca3d, addlabels = TRUE, ylim = c(0, 50))
var <- get_pca_var(pca3d)
corrplot(var$contrib, is.corr=FALSE)
# Contributions of variables to PC1
fviz_contrib(pca3d, choice = "var", axes = 1, top = 10)
corrplot(var$contrib, is.corr=FALSE)
# Contributions of variables to PC1
fviz_contrib(pca3d, choice = "var", axes = 1, top = 10)
cor_matrix <- cor(datos_nci)
plot3d(cor_matrix, type = "s", size = 2)
# Generació del model PCA en 2D i plotejat de gràfics representatius
pca2d <- PCA(scaled_data,ncp=5,graph=FALSE)
fviz_pca_var(pca2d, col.var = "contrib") # Scree plot
fviz_pca_biplot(pca2d, col.var = "contrib") # Biplot
pairs(scaled_data)
cor_matrix <- cor(scaled_data)
corrplot(cor_matrix, method = "color")
var_prop <- pca3d$sdev^2/sum(pca3d$sdev^2)
scatter3D(pca3d$x[,1], pca3d$x[,2], pca3d$x[,3], col = rev(var_prop), size = 3)
biplot(pca3d, scale = 0)
var_labels <- colnames(scaled_data)
biplot(pca3d, scale = 0)
text3D(pca3d$rotation[,1], pca3d$rotation[,2], pca3d$rotation[,3], labels = var_labels, col = "blue", adj = 0.5, cex = 0.8)
plot3d(cor_matrix, type = "s", size = 2)
# Plot PCA Analysis data
plot3d(PCA_x, PCA_y, PCA_z, col = "purple",
type = "s", size = 0.5, xlab = "PC1", ylab = "PC2", zlab = "PC3", main="3D Scatter Plot")
# Plot Prediction Model data
plot3d(Pompeu_x, Pompeu_y, Pompeu_z, col = "yellow",
type = "s", size = 0.5, add=TRUE)
plot3d(Junta_x, Junta_y, Junta_z, col = "blue",
type = "s", size = 0.5, add=TRUE)
plot3d(Erasme_x, Erasme_y, Erasme_z, col = "black",
type = "s", size = 0.5, add=TRUE)
plot3d(Manso_x, Manso_y, Manso_z, col = "pink",
type = "s", size = 0.5, add=TRUE)
plot3d(Montigala_x, Montigala_y, Montigala_z, col = "red",
type = "s", size = 0.5, add=TRUE)
plot3d(Nil_x, Nil_y, Nil_z, col = "orange",
type = "s", size = 0.5, add=TRUE)
plot3d(Pitagoras_x, Pitagoras_y, Pitagoras_z, col = "green",
type = "s", size = 0.5, add=TRUE)
plot3d(Hospi_x, Hospi_y, Hospi_z, col = "brown",
type = "s", size = 0.5, add=TRUE)
#Add legend
legend3d("topright", legend = c("Parellada", "Pompeu","Junta","Erasme","Manso","Montigalà","Nil","Pitàgores","Hospi"), col = c("purple", "yellow","blue","black","pink","red","orange","green","brown"), pch = 16)
#Add legend
legend3d("bottomright", legend = c("Parellada", "Pompeu","Junta","Erasme","Manso","Montigalà","Nil","Pitàgores","Hospi"), col = c("purple", "yellow","blue","black","pink","red","orange","green","brown"), pch = 16)
#Add legend
legend3d("right", legend = c("Parellada", "Pompeu","Junta","Erasme","Manso","Montigalà","Nil","Pitàgores","Hospi"), col = c("purple", "yellow","blue","black","pink","red","orange","green","brown"), pch = 16)
#Add legend
legend3d("right", legend = c("Parellada", "Pompeu","Junta","Erasme","Manso","Montigalà","Nil","Pitàgores","Hospi"), col = c("purple", "yellow","blue","black","pink","red","orange","green","brown"), pch = 16)
#Add legend
legend3d("left", legend = c("Parellada", "Pompeu","Junta","Erasme","Manso","Montigalà","Nil","Pitàgores","Hospi"), col = c("purple", "yellow","blue","black","pink","red","orange","green","brown"), pch = 16)
#Add legend
legend3d("top", legend = c("Parellada", "Pompeu","Junta","Erasme","Manso","Montigalà","Nil","Pitàgores","Hospi"), col = c("purple", "yellow","blue","black","pink","red","orange","green","brown"), pch = 16)
#Add legend
legend3d("bottom", legend = c("Parellada", "Pompeu","Junta","Erasme","Manso","Montigalà","Nil","Pitàgores","Hospi"), col = c("purple", "yellow","blue","black","pink","red","orange","green","brown"), pch = 16)
#Add legend
legend3d("center", legend = c("Parellada", "Pompeu","Junta","Erasme","Manso","Montigalà","Nil","Pitàgores","Hospi"), col = c("purple", "yellow","blue","black","pink","red","orange","green","brown"), pch = 16)
#Add legend
legend3d("topleft", legend = c("Parellada", "Pompeu","Junta","Erasme","Manso","Montigalà","Nil","Pitàgores","Hospi"), col = c("purple", "yellow","blue","black","pink","red","orange","green","brown"), pch = 16)
#Add legend
legend3d("bottomleft", legend = c("Parellada", "Pompeu","Junta","Erasme","Manso","Montigalà","Nil","Pitàgores","Hospi"), col = c("purple", "yellow","blue","black","pink","red","orange","green","brown"), pch = 16)
#Add legend
legend3d("bottomright", legend = c("Parellada", "Pompeu","Junta","Erasme","Manso","Montigalà","Nil","Pitàgores","Hospi"), col = c("purple", "yellow","blue","black","pink","red","orange","green","brown"), pch = 16)
# Plot PCA Analysis data
plot3d(PCA_x, PCA_y, PCA_z, col = "purple",
type = "s", size = 0.5, xlab = "PC1", ylab = "PC2", zlab = "PC3", main="3D Scatter Plot")
# Plot Prediction Model data
plot3d(Pompeu_x, Pompeu_y, Pompeu_z, col = "yellow",
type = "s", size = 0.5, add=TRUE)
plot3d(Junta_x, Junta_y, Junta_z, col = "blue",
type = "s", size = 0.5, add=TRUE)
plot3d(Erasme_x, Erasme_y, Erasme_z, col = "black",
type = "s", size = 0.5, add=TRUE)
plot3d(Manso_x, Manso_y, Manso_z, col = "pink",
type = "s", size = 0.5, add=TRUE)
plot3d(Montigala_x, Montigala_y, Montigala_z, col = "red",
type = "s", size = 0.5, add=TRUE)
plot3d(Nil_x, Nil_y, Nil_z, col = "orange",
type = "s", size = 0.5, add=TRUE)
plot3d(Pitagoras_x, Pitagoras_y, Pitagoras_z, col = "green",
type = "s", size = 0.5, add=TRUE)
plot3d(Hospi_x, Hospi_y, Hospi_z, col = "brown",
type = "s", size = 0.5, add=TRUE)
# Plot the condicende region
shade3d(ellipsoid, col = "blue", alpha = 0.5)
#Add legend
legend3d("bottomright", legend = c("Parellada", "Pompeu","Junta","Erasme","Manso","Montigalà","Nil","Pitàgores","Hospi"), col = c("purple", "yellow","blue","black","pink","red","orange","green","brown"), pch = 16)
# Plot PCA Analysis data
plot3d(PCA_x, PCA_y, PCA_z, col = "purple",
type = "s", size = 0.5, xlab = "PC1", ylab = "PC2", zlab = "PC3", main="3D Scatter Plot")
# Plot Prediction Model data
plot3d(Pompeu_x, Pompeu_y, Pompeu_z, col = "yellow",
type = "s", size = 0.5, add=TRUE)
plot3d(Junta_x, Junta_y, Junta_z, col = "blue",
type = "s", size = 0.5, add=TRUE)
plot3d(Erasme_x, Erasme_y, Erasme_z, col = "black",
type = "s", size = 0.5, add=TRUE)
plot3d(Manso_x, Manso_y, Manso_z, col = "pink",
type = "s", size = 0.5, add=TRUE)
plot3d(Montigala_x, Montigala_y, Montigala_z, col = "red",
type = "s", size = 0.5, add=TRUE)
plot3d(Nil_x, Nil_y, Nil_z, col = "orange",
type = "s", size = 0.5, add=TRUE)
plot3d(Pitagoras_x, Pitagoras_y, Pitagoras_z, col = "green",
type = "s", size = 0.5, add=TRUE)
plot3d(Hospi_x, Hospi_y, Hospi_z, col = "brown",
type = "s", size = 0.5, add=TRUE)
#Add legend
legend3d("bottomright", legend = c("Parellada", "Pompeu","Junta","Erasme","Manso","Montigalà","Nil","Pitàgores","Hospi"), col = c("purple", "yellow","blue","black","pink","red","orange","green","brown"), pch = 16)
#Add legend
legend3d("right", legend = c("Parellada", "Pompeu","Junta","Erasme","Manso","Montigalà","Nil","Pitàgores","Hospi"), col = c("purple", "yellow","blue","black","pink","red","orange","green","brown"), pch = 16)
# Create an ellipsoid object to represent the conficende region
ellipsoid <- ellipse3d(PCA_cov, centre = PCA_center,level = 0.9)
# Plot the condicende region
shade3d(ellipsoid, col = "blue", alpha = 0.5)
deviation_Pompeu <- sqrt(rowSums((Pompeu_coords - PCA_center) ^ 2))
deviation_Pompeu <- sqrt(rowSums((Pompeu_coords-PCA_center) ^ 2))
deviation_Pompeu <- sqrt(rowSums((Pompeu_coords-PCA_center)^2))
class(Pompeu_coords)
class(PCA_center)
Pompeu_coords <- as.matrix(Pompeu_coords)
deviation_Pompeu <- sqrt(rowSums((Pompeu_coords-PCA_center)^2))
class(Pompeu_coords)
Pompeu_coords <- as.data.frame(Pompeu_coords)
deviation_Pompeu <- sqrt(rowSums((Pompeu_coords-PCA_center)^2))
class(Pompeu_coords)
class(Erasme_coords)
cov_matrix <- cov(scaled_data)
deviation <- mahalanobis(scaled_Pompeu, colMeans(scaled_data), cov_matrix)
# Dades i gràfics interessants sobre la variancia i desviació estàndard de les diferents variables
summary(pca3d)
